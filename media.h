const char t1[] =
    "I64 road_x[ROAD_NUM], road_trend;\n"
    "F64 speed, distance;\n"
    "I64 road_ptr = 0, car_x;\n"
    "F64 t_last;\n"
    "Bool crash;\n"
    "\n"
    "U0 DrawIt(CTask *task, CDC *dc)\n"
    "{\n"
    "  I64 w = task->pix_width, h = task->pix_height;\n"
    "  I64 i, x, y, xx;\n"
    "  xx = w >> 1 - car_x + road_x[road_ptr & (ROAD_NUM - 1)];\n"
    "\n"
    "  dc->color = LTGRAY;\n"
    "  for (i = 0; i < ROAD_NUM; i++) {\n"
    "    x = w >> 1 - car_x + road_x[(i + road_ptr) & (ROAD_NUM - 1)];\n"
    "    y = h - 0.5 * i;\n"
    "    if (y < (h + FONT_HEIGHT) >> 1) break;\n"
    "    GrPlot(dc, x + ROAD_WIDTH_BY_2 - 0.4 * i, y);\n"
    "    GrPlot(dc, x - ROAD_WIDTH_BY_2 + 0.4 * i, y);\n"
    "  }\n"
    "  dc->color = WHITE;\n"
    "\n"
    "  x = w >> 1 - CAR_WIDTH_BY_2;\n"
    "  if (x < xx - ROAD_WIDTH_BY_2)\n"
    "    crash = TRUE;\n"
    "  GrLine(dc, x - 10, h, x - 40, h - 100);\n"
    "  GrLine(dc, x + 10, h, x + 40, h - 100);\n"
    "\n"
    "  x = w >> 1 + CAR_WIDTH_BY_2;\n"
    "  if (x > xx + ROAD_WIDTH_BY_2)\n"
    "    crash = TRUE;\n"
    "  GrLine(dc, x - 10, h, x - 40, h - 100);\n"
    "  GrLine(dc, x + 10, h, x + 40, h - 100);\n"
    "\n"
    "  dc->color = YELLOW;\n"
    "  if (crash)\n"
    "    GrPrint(dc, w >> 1 - FONT_WIDTH * 4, (h - FONT_HEIGHT) >> 1, \"Game "
    "Over\");\n"
    "}\n"
    "\n"
    "U0 UpdateRoad()\n"
    "{\n"
    "  F64 t0 = tS;\n"
    "  distance += speed * (t0 - t_last);\n"
    "  t_last = t0;\n"
    "  while (distance > 1.0) {\n"
    "    road_trend = ClampI64(road_trend + SignI64(RandU16 % 3 - 1), -5, 5);\n"
    "    road_x[road_ptr & (ROAD_NUM - 1)] = road_x[(road_ptr - 1) & (ROAD_NUM "
    "- 1)] += road_trend / 3;\n"
    "    road_ptr++;\n"
    "    distance -= 1.0;\n"
    "  }\n"
    "}\n"
    "\n"
    "U0 Init()\n"
    "{\n"
    "  I64 i, x = 0;\n"
    "  DocClear;\n"
    "  \"$$BG,DKGRAY$$%h*c\", (TEXT_ROWS - 1) / 2, '\n';\n"
    "  speed = 0;\n"
    "  distance = 0;\n"
    "  road_trend = 0;\n"
    "  road_ptr = 0;\n"
    "  car_x = 0;\n"
    "  for (i = 0; i < ROAD_NUM; i++) {\n"
    "    road_x[i] = x;\n"
    "    road_trend = ClampI64(road_trend + SignI64(RandU16 % 3 - 1), -5, 5);\n"
    "    x += road_trend / 3;\n"
    "  }\n"
    "  t_last = tS;\n"
    "  crash = FALSE;\n"
    "}\n"
    "\n"
    "U0 Halogen()\n"
    "{\n"
    "  I64 arg1, arg2, ch = 0, sc = 0;\n"
    "  SettingsPush;\n"
    "  Fs->text_attr = BLACK << 4 + WHITE;\n"
    "  MenuPush(\n"
    "    \"File {\"\n"
    "    \"  Abort(,CH_SHIFT_ESC);\"\n"
    "    \"  Exit(,CH_ESC);\"\n"
    "    \"}\"\n"
    "    \"Play {\"\n"
    "    \"  Restart(,'\n');\"\n"
    "    \"  Accelerate(,,SC_CURSOR_UP);\"\n"
    "    \"  Deccellerate(,,SC_CURSOR_DOWN);\"\n"
    "    \"  Left(,,SC_CURSOR_LEFT);\"\n"
    "    \"  Right(,,SC_CURSOR_RIGHT);\"\n"
    "    \"}\"\n"
    "  );\n"
    "  AutoComplete;\n"
    "  WinBorder;\n"
    "  WinMax;\n"
    "  DocCursor;\n"
    "  Init;\n"
    "  Fs->draw_it = &DrawIt;\n"
    "  try {\n"
    "    while (TRUE) {\n"
    "      switch (ScanMsg(&arg1, &arg2, 1 << MSG_KEY_DOWN | 1 << MSG_KEY_UP)) "
    "{\n"
    "        case MSG_KEY_DOWN:\n"
    "          ch = arg1; sc = arg2;\n"
    "          switch (ch) {\n"
    "            case '\n':\n"
    "              Init;\n"
    "              break;\n"
    "            case CH_ESC:\n"
    "            case CH_SHIFT_ESC:\n"
    "              goto ha_done;\n"
    "          }\n"
    "          break;\n"
    "        case MSG_KEY_UP:\n"
    "          ch = arg1; sc = arg2;\n"
    "          if (!ch)\n"
    "            switch (sc.u8[0]) {\n"
    "              case SC_CURSOR_RIGHT:\n"
    "              case SC_CURSOR_LEFT:\n"
    "              case SC_CURSOR_UP:\n"
    "              case SC_CURSOR_DOWN:\n"
    "                sc = 0;\n"
    "                break;\n"
    "            }\n"
    "          break;\n"
    "      }\n"
    "      switch (sc.u8[0]) {\n"
    "        case SC_CURSOR_RIGHT:\n"
    "          car_x++;\n"
    "          break;\n"
    "        case SC_CURSOR_LEFT:\n"
    "          car_x--;\n"
    "          break;\n"
    "        case SC_CURSOR_UP:\n"
    "          if (++speed > 200) speed = 200;\n"
    "          break;\n"
    "        case SC_CURSOR_DOWN:\n"
    "          if (--speed < 0) speed = 0;\n"
    "          break;\n"
    "      }\n"
    "      if (crash)\n"
    "        Snd;\n"
    "      else {\n"
    "        if (speed)\n"
    "          Snd(Freq2Ona(speed + 10));\n"
    "        else\n"
    "          Snd;\n"
    "        UpdateRoad;\n"
    "      }\n"
    "      Sleep(10);\n"
    "    }\n"
    "  ha_done:\n"
    "    GetMsg(,, 1 << MSG_KEY_UP);\n"
    "  }\n"
    "  catch\n"
    "    PutExcept;\n"
    "  MenuPop;\n"
    "  DocClear;\n"
    "  SettingsPop;\n"
    "}";

const int p = 0;
const char *t2 = "\0CMP_TEMPLATES::\n"
                 "DU32	@@05,@@10,@@15,@@25,@@30,\n"
                 "@@35,@@40,@@45,@@55,@@60,\n"
                 "@@75,@@80,@@85,@@90,@@95,\n"
                 "@@100,@@105,@@110,@@120,@@130;\n"

                 "@@05:	//INC\n"
                 "USH	RAX\n"
                 "LD1\n"
                 "ADD	ST0,U64 [RSP]\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@10:	//DEC\n"
                 "USH	RAX\n"
                 "LD1\n"
                 "SUBR	ST0,U64 [RSP]\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@15:	//MOD\n"
                 "USH	RDX\n"
                 "USH	RAX\n"
                 "OV	RBX,RSP\n"
                 "LD	U64 [RBX]\n"
                 "LD	U64 8[RBX]\n"
                 "@@0:	FPREM\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@20\n"
                 "STP	U64 [RBX]\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "OP	RAX\n"
                 "DD	RSP,8\n"

                 "@@25:	//LESS\n"
                 "USH	RDX\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "LD	U64 8[RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,0\n"
                 "DC	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,16\n"

                 "@@30:	//GREATER\n"
                 "USH	RDX\n"
                 "USH	RAX\n"
                 "LD	U64 8[RSP]\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,0\n"
                 "DC	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,16\n"

                 "@@35:	//LESS_EQU\n"
                 "USH	RDX\n"
                 "USH	RAX\n"
                 "LD	U64 8[RSP]\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,1\n"
                 "BB	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,16\n"

                 "@@40:	//GREATER_EQU\n"
                 "USH	RDX\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "LD	U64 8[RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,1\n"
                 "BB	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,16\n"

                 "@@45: //StrLen\n"
                 "OV	RDX,RAX\n"
                 "@@0:	MOV	BL,U8 [RAX]\n"
                 "NC	RAX\n"
                 "EST	BL,BL\n"
                 "NZ	@@50\n"
                 "UB	RAX,RDX\n"
                 "EC	RAX\n"

                 "@@55: //RDTSC\n"
                 "DTSC\n"
                 "HL	RDX,32\n"
                 "DD	RAX,RDX\n"

                 "@@60: //SignI64\n"
                 "EST	RAX,RAX\n"
                 "Z	@@70\n"
                 "S	@@65\n"
                 "OV	RAX,1\n"
                 "MP	@@70\n"
                 "@@5:	MOV	RAX,-1\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5: //Sqr\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "MUL	ST0,ST0\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@90: //Abs\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "ABS\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@95: //Sqrt\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "SQRT\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@100: //Sin\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "SIN\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@105: //Cos\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COS\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@110: //Tan\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "@@15:	FPTAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@115\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@120: //Atan\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "LD1\n"
                 "@@25:	FPATAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@125\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@130:\n"

                 "//************************************\n"
                 "MPTEMPLATES_DONT_POP::\n"
                 "U32	@@05,@@10,@@15,@@20,@@25,\n"
                 "@@30,@@35,@@40,@@45,@@50,\n"
                 "@@55,@@60,@@65,@@70,@@75,\n"
                 "@@80,@@85,@@90,@@100,@@110;\n"

                 "@@05:	//INC\n"
                 "USH	RAX\n"
                 "LD1\n"
                 "ADD	ST0,U64 [RSP]\n"
                 "ST	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@10:	//DEC\n"
                 "USH	RAX\n"
                 "LD1\n"
                 "SUBR	ST0,U64 [RSP]\n"
                 "ST	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@15:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "DD	RSP,8\n"

                 "@@65: //Sqr\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "MUL	ST0,ST0\n"
                 "DD	RSP,8\n"

                 "@@70: //Abs\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "ABS\n"
                 "DD	RSP,8\n"

                 "@@75: //Sqrt\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "SQRT\n"
                 "DD	RSP,8\n"

                 "@@80: //Sin\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "SIN\n"
                 "DD	RSP,8\n"

                 "@@85: //Cos\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COS\n"
                 "DD	RSP,8\n"

                 "@@90: //Tan\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "@@5:	FPTAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@95\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@100: //Atan\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "LD1\n"
                 "@@05:	FPATAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@105\n"
                 "DD	RSP,8\n"
                 "@@10:\n"

                 "//************************************\n"
                 "CMP_TEMPLATES_DONT_PUSH::\n"
                 "U32	@@05,@@10,@@15,@@20,@@30,\n"
                 "@@35,@@40,@@50,@@55,@@60,\n"
                 "@@65,@@70,@@75,@@80,@@85,\n"
                 "@@90,@@95,@@100,@@110,@@120;\n"

                 "@@05:	//INC\n"
                 "UB	RSP,8\n"
                 "LD1\n"
                 "ADDP	ST1,ST0\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@10:	//DEC\n"
                 "UB	RSP,8\n"
                 "LD1\n"
                 "SUBP	ST1,ST0\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@15:\n"
                 "@@0:	//LESS\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,0\n"
                 "Z	@@25\n"
                 "OV	RAX,1\n"
                 "BB	RAX,0\n"
                 "@@5:	FFREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@30:	//GREATER\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,0\n"
                 "DC	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@35:	//LESS_EQU\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,1\n"
                 "BB	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@40:	//GREATER_EQU\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,1\n"
                 "Z	@@45\n"
                 "OV	RAX,0\n"
                 "DC	RAX,0\n"
                 "@@5:	FFREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5: //FSTP\n"
                 "UB	RSP,8\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"
                 "@@0:\n"
                 "@@5: //Sqr\n"
                 "UB	RSP,8\n"
                 "MUL	ST0,ST0\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@80: //Abs\n"
                 "UB	RSP,8\n"
                 "ABS\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@85: //Sqrt\n"
                 "UB	RSP,8\n"
                 "SQRT\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@90: //Sin\n"
                 "UB	RSP,8\n"
                 "SIN\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@95: //Cos\n"
                 "UB	RSP,8\n"
                 "COS\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@100: //Tan\n"
                 "UB	RSP,8\n"
                 "@@05:	FPTAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@105\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@110: //Atan\n"
                 "UB	RSP,8\n"
                 "LD1\n"
                 "@@15:	FPATAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@115\n"
                 "STP	U64 [RSP]\n"
                 "OP	RAX\n"
                 "@@20:\n"

                 "//************************************\n"
                 "CMP_TEMPLATES_DONT_PUSH_POP::\n"
                 "U32	@@05,@@10,@@15,@@20,@@25,\n"
                 "@@30,@@35,@@40,@@45,@@50,\n"
                 "@@55,@@60,@@65,@@70,@@75,\n"
                 "@@80,@@85,@@90,@@95,@@105;\n"

                 "@@05:	//INC\n"
                 "UB	RSP,8\n"
                 "LD1\n"
                 "ADDP	ST1,ST0\n"
                 "ST	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@10:	//DEC\n"
                 "UB	RSP,8\n"
                 "LD1\n"
                 "SUBP	ST1,ST0\n"
                 "ST	U64 [RSP]\n"
                 "OP	RAX\n"

                 "@@15:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5:\n"
                 "@@0:\n"
                 "@@5: //Sqr\n"
                 "MUL	ST0,ST0\n"

                 "@@70: //Abs\n"
                 "ABS\n"

                 "@@75: //Sqrt\n"
                 "SQRT\n"

                 "@@80: //Sin\n"
                 "SIN\n"

                 "@@85: //Cos\n"
                 "COS\n"

                 "@@90: //Tan\n"
                 "PTAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@90\n"
                 "FREE	ST0\n"
                 "INCSTP\n"

                 "@@95: //Atan\n"
                 "LD1\n"
                 "@@00:	FPATAN\n"
                 "STSW\n"
                 "EST	AX,0x400\n"
                 "NZ	@@100\n"
                 "@@05:\n"

                 "//************************************\n"
                 "CMP_TEMPLATES_DONT_PUSH2::\n"
                 "U32	@@05,@@10,@@15,@@20,@@25,\n"
                 "@@35,@@45,@@50,@@55,@@60,\n"
                 "@@65,@@70,@@75,@@80,@@85,\n"
                 "@@90,@@95,@@100,@@105,@@110;\n"

                 "@@05:\n"
                 "@@0:\n"

                 "@@15:\n"
                 "@@0:	//LESS\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,0\n"
                 "DC	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@25:	//GREATER\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,0\n"
                 "Z	@@30\n"
                 "OV	RAX,1\n"
                 "BB	RAX,0\n"
                 "@@0:	FFREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@35:	//LESS_EQU\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,1\n"
                 "Z	@@40\n"
                 "OV	RAX,0\n"
                 "DC	RAX,0\n"
                 "@@0:	FFREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"

                 "@@45:	//GREATER_EQU\n"
                 "USH	RAX\n"
                 "LD	U64 [RSP]\n"
                 "COMIP	ST0,ST1\n"
                 "OV	RAX,1\n"
                 "BB	RAX,0\n"
                 "FREE	ST0\n"
                 "INCSTP\n"
                 "DD	RSP,8\n"
                 "@@50:\n";
